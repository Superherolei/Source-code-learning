
1.点击日历的时候输入框和日历同步
2.年的icon改成和月的大小一致
3.快捷输入日的计算（闰年，年份输入不全时日的最大值，修改年分后，已输入的值是否比输入年月的最大值大）


husky是一个给git增加 hooks 工具（代码提交之前或者之后执行的脚本）
const实际上保证的，并不是变量的值不得改动，而是变量指向的那个内存地址所保存的数据不得改动。
对于简单类型的数据（数值、字符串、布尔值），值就保存在变量指向的那个内存地址，因此等同于常量。
但对于复合类型的数据（主要是对象和数组），变量指向的内存地址，保存的只是一个指向实际数据的指针，
const只能保证这个指针是固定的（即总是指向另一个固定的地址），至于它指向的数据结构是不是可变的，就完全不能控制了。
因此，将一个对象声明为常量必须非常小心。

 ==用于一般比较，===用于严格比较，==在比较的时候可以转换数据类型，===严格比较，只要类型不匹配就返回flase。

数组中嵌套数组（多维数组）

数组的方法 push() 将末尾添加新的数组元素
	 pop() 删除数组的末尾元素，并返回这个元素
	shift() 删除数组的第一个元素，并返回这个元素 
	unshift() 删除数组的第一个元素,括号里有值的时候更改第一个值
	reverse 翻转数组  sort数组排序
 	https://blog.csdn.net/U_Are_My_Halo/article/details/89321683
          arguments：在js中每一个函数或方法中都有一个隐式的属性，叫arguments
          arguments有点类似于数组，叫做伪数组
          arguments用来存储所有传入的实参


switch中否则为default

循环中可以使用递归来代替循环 （函数自己调用自己）

parseInt(str, 16)   第一个参数为要解析的字符串 ，第二个参数是以多少进制解析

Object.freeze(obj);   可以将对象设置为只读属性，更改时会报错
obj.hasOwnProperty(i) ； 判断对象中是否含有某一项属性；


promise复习

1.搭建vite+vue3工程
const locale = computed(() => 
    language.value === 'zh-cn' ? zhCn : en   //此方法不需要return
);
const locale = computed(() => {
     return   language.value === 'zh-cn' ? zhCn : en   //此方法需要return
  }
);

elk.amarsoft.com
add filter （log.level）

vue3-main：
compiler-core:  与平台无关的编译模块，例如基础的 baseCompile 编译模版文件, baseParse生成AST
compiler-dom: 基于compiler-core，专为浏览器的编译模块，可以看到它基于baseCompile，baseParse，重写了complie、parse
compiler-sfc: 用来编译vue单文件组件
compiler-ssr: 服务端渲染相关的
reactivity: vue独立的响应式模块
runtime-core: 也是与平台无关的基础模块，有vue的各类API，虚拟dom的渲染器
runtime-dom: 基于runtime-core，针对浏览器的运行时
vue: 引入导出 runtime-core，还有编译方法

package.json  module 
1.Tree Shaking          打包工具在打包阶段就可以分析出代码中用到了某个模块中的哪几个方法。
		其它没有用到的方法就可以从最终的 bundle 文件中剔除掉。这样既可以减少 bundle 文件的大小，
		又可以提高脚本的执行速度。这个机制就叫做 Tree Shaking。


